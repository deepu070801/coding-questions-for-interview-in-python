1.Reversing a string
Ans.                                          #reversing an list using reverse() funtion
>a=input()                                    >a=[1,2,3,4]
 print(a[::-1])                                print(a.reverse())

2.Checking a string is palindrome or not?
Ans.
>string=input()
 string2 = string[::-1]
 if string==string2:
    print("Given string is a plaindrome"
 else:
    print("Given string is not a plaindrome")

3.No.of Occurance of character in a string?
Ans.
>string = input()
 n = input()
 count = 0
 for i in string:
    if i==n:
       count+=1
 print(count)

4.Finding the two strings is anagram or not?
Ans.
>#Anagram is when both strings have same characters but order of characters are different.Eg. "Silent" ,"Listen".
>string1=input()
 string2=input()
 if(sorted(string1)==sorted(string2)):
     print("Given two strings are anagram")
 else:
     print("Given two strings are anagram")\

5.print no.of vowels and constants in a string?
Ans.
>string = input()
 vowels = ['a','e','i','o','u']
 count_v = 0
 count_c = 0
 for i in string:
    if i in vowels:
        count_v+=1
    else:
        count_c+=1
 print(count_v)
 print(count_c)

6.How do you get the matching elements in an integer array?
>n = input().split()
m = input().split()
l = []
a =[]
for i in n:
    l.append(int(i))
for j in m:
    a.append(int(j))
res = len([l.index(i) for i in a])
print(res)
Sample input :
1 2 3 4 5 6
1 2 3 3 4 5 7
Sample Output:
5 #as 1,2,3,4,5 their count is 5.

7.Swaping of two numbers?
Ans.
>a = 2                    #using third variable
 b = 5                     a = int(input())
 a,b = b,a                 b = int(input())
 print(a)                  temp = a
 print(b)                  a = b
                           b = temp
                           print(a,b)

8.Printing fibonici series?
Ans.
#using while loop
>n_terms =  int(input("How many terms you want to print: "))
 n1,n2=0,1
 count = 0
 if n_terms<=0:
    print("Enter a positive integer")
 elif n_terms==1:
    print(n_1)
 else:
   while count<n_terms:
      print(n1)
      nth = n1+n2
      n1=n2
      n2=nth
      count+=1
sample input:
5
sample output:
0
1
1
2
3
#using recursion
>def fibanoci(n):
   if n<=1:
     return n
   else:
     return fibanoci(n-1)+fibanoci(n-2)
 n=int(input())
 if n<0:
   print("Invalid integer")
 else:
   for i in range(n):
       print(fibanoci(i))
 
9. Factorial of a number?
Ans.
>n = int(input())
 fac = 1
 for i in range(1,n+1):
    fac *= i
 print(fac)

10.Print min and max in a list without in built functions?
Ans.
>l = list(map(int,input().split()))
min1=l[0]
max1=l[0]
for i in range(len(l)):
    if l[i]>min1:
        min1=l[i]
    if l[i]<max1:
        max1=l[i]
print(min1,max1)

11.Prime Number?
Ans.
#printing whether the number is prime or not
>n=int(input())
 for i in range(2,n):
   if n%i==0:
      print("Not prime")
 else:
    print("Prime number")
Sample Input:
10
Sample Output:
Not prime

#printing prime numbers in a given range
def check_prime_no(num):
    if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num,end=" ")
n=8

for i in range(2,n+1):
   # all prime numbers are greater than 1
   check_prime_no(i)
12.Program to print the number which is not present in list2 from list1?
Ans.
>l = list(map(int,input().split()))
 a = list(map(int,input().split()))
 for i in l:
    if i not in a:
        print(i)
Sample Input:
1 2 3 4 
1 2 4
Sample Output:
3

13.LCM(Least common Multiple): multiplying the common factors and other factors too.
For example:
6=2*3
12 = 2*2*3
LCM=2*2*3=12
GCF(Greatest common factor):the greatest factor from common factors.
For example:
6=1,2,3,6
12=1,2,3,4,6,12
common factors are 1,2,3,6
where 6 is greatest common factor of 6,12.
#program to print gcf of two numbers.
>n = 12
 m = 24
 def hcf(n,m):
    if n>m:
        smaller = m
    if m>n:
        smaller = n
    for i in range(1,smaller+1):
        if (n%i==0) and (m%i==0):
            hcf = i
    return hcf
 print(hcf(n,m))
#program to print lcm of two numbers.
># Python Program to find the L.C.M. of two input number

def compute_lcm(x, y):

   # choose the greater number
   if x > y:
       greater = x
   else:
       greater = y

   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1

   return lcm

num1 = 54
num2 = 24

print("The L.C.M. is", compute_lcm(num1, num2))

14.finding co-primes are not.
Ans.Co-Prime = numbers whoes hcf=1.
>def co-prmes(n,m):
    if n>m:
        smaller = m
    if m>n:
        smaller = n
    for i in range(1,smaller+1):
        if (n%i==0) and (m%i==0):
            hcf = i
    if hcf==1:
        print("Co-prime")
    else:
        print("not co-primes")
  co-prime(10,9)


15.To find whether the number is composite or prime.
Ans.
>n=10
 count = 0
 for i in range(2,n):
    if n%i==0:
        count += 1
 if count>=1:
    print("is a compoiste number")
 else:
    print("prime number")

16.Amstrong Number?
Ans.
A number is said to be amstrong number if sum of power of n(no.of.digits in a number) of digits in a number is equal to the number.
>n =input()
 m = len(n)
 sum2=0
 for i in n:
   j=int(i)**m
   sum2+=j
 if sum2==int(n):
    print("It is an amstrong number")
 else:
    print("no")

